1.Rotate 1-d array (rotate_array_in_place.cpp)
2.parity check  (partiy_check.cpp)
3.Reverse ll (linked_lst.cpp)
4.find cycle in ll (linked_lst.cpp)
5.Merge sorted ll (linked_lst.cpp)
6.Test overlapping of the list (linked_lst.cpp)
5.number palindrome (number_palindrome.cpp)
6.Search element in BST,traversal,print all paths,
mirror tree ,count number of nodes (bst.cpp)
7.string check uniqueness
8.Reverse c-style string
9.Check anagram (cc_int_1.cpp).
10.Remove duplicate (cc_int_1.cpp).
11.replace spaces with %20 (cc_int_1.cpp).
12.rotate mat by 90 (cc_int_1.cpp).
13.Convert row and col = 0 if found 0 (cc_int_1.cpp).
14.Decode the give xl columns string like AA,AB (excel_sheet_column_decoding.cpp)
15.BFS traversal (bfs_bst.cpp)
16.flood fill (flood_fill.cpp) backtracking with memory to avoid repeat traversal
17.gcd  (recursion)
18.matrix spiral order traversal (spiral_order.cpp)
19.Maze traversal  (maze.cpp)
20.Find # of k between 0 to n (find_no_of_k.cpp)
21.Two sum on sorted array (twosum.cpp)
22.find longest increasing consecutive sequence (find_longest_inc_substr.cpp)
23.get larget palindrome (get_largest_palindrome.cpp)
24.quick sort,merge sort (quick_sort.cpp,merge_sort.cpp)
25.generate fibonaci seq (fibo.c)
26.print the robot path (get_robot_path.cpp)
27.find n_queen placement (n_queen.cpp)
28.paint fill like flood fill (paint_fill.cpp)
29.compute # ways compute the coins (rec_coin.cpp)
30.backtrack skeleton (recur_backtrack.cpp)
31.recusive parenthesis (recur_parenthesis.cpp)
32.recusive string use of permutation network (recur_string.cpp)
33.seperate out 1s and 0s from the array (seperate_z_and_o.cpp)
34.swap consecutive bits (bits.cpp)
35.check wheather # is power of 2 (bits.cpp)
36.count # of 1's (bits.cpp)
37.determine # of bits req to change a to b (bits.cpp)
38.determine machine endianess (bits.cpp)
39.display decimal # in bin format (bits.cpp)
40.Determine wheather strings are ismorphic or not (is_ismorphic.cpp)

